data:
  name: "SparsePixelMapNOvA"
  topdir: "/data/p5/processed"
  val_fraction: 0.05
  test_fraction: 0.05

model:
  name: "FishNet"
  D: 2
  loss_params:
    func: "CrossEntropyLoss"
  arrange_data: "arrange_sparse_minkowski_2stack"
  arrange_truth: "sparse_semantic_truth"
  collate: "collate_sparse_minkowski_2stack"

  input_feats: 3
  network_planes: [64, 128, 256, 512, 512, 512, 384, 256, 320, 832, 1600]
  num_res_blks: [2, 4, 8, 4, 2, 2, 2, 2, 2, 4]
  num_trans_blks: [2, 2, 2, 2, 2, 4]
  num_cls: 5
  num_down_sample: 3
  num_up_sample: 3
  
  activation_params:
    activation: "mish"
    LeakyReLU:
      negative_slope: 0.01
      
  optimizer_params:
    optimizer: "SGD"
    AdamW:
      lr:               2.e-3
      weight_decay:     0.01
    Fromage:
      lr:               0.01
    Ranger:
      lr:               1.e-3
      alpha:            0.5
      k:                6
      N_sma_threshhold: 5
      betas:            [ 0.95, 0.999 ]
      eps:              1.e-5
      weight_decay:     0
      use_gc:           True
      gc_conv_only:     False
    SGD:
      lr:               0.02
      momentum:         0.9

  scheduler_params:
    scheduler: "ReduceLROnPlateau"
    ReduceLROnPlateau:
      factor: 0.8
      patience: 3
    StepLR:
      step_size: 3
      gamma: 0.8

  metric_params:
    metrics: "Classification"
    include_batch_metrics: True
    Classification:
      class_names: ["numu","nue","nutau","nc","cosmic"]

data_loader:
  batch_size: 1024
  num_workers: 5

trainer:
  device: 7 # Which GPU to use
  n_epochs: 35
  empty_cache: 1 # How many iterations between calls to empty GPU memory cache
  train_name:  "/weight-batchsizecounts"
  summary_dir: "/scratch/SparseNOvA/summary/preselection/bestparam/fishnet/SGD/batchsize1024/weighted_focal_loss/StdInput/noTau/gamma_1.5"
  output_dir:  "/scratch/SparseNOvA/params"
  resume: False
  debug: False

inference:
  max_images: 100 # Maximum number of images to process
  event_display: False # Whether to draw event displays
  confusion: False # Whether to draw a confusion matrix
  state_dict: None # Replace this with a string path to a trained .pth.tar file after training! They"re written to params/checkpoints
