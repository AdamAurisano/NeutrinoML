data:
  name: 'DensePixelMapNOvA'
  filedir: '/data/mp5/preselection_cvnmap'
  t_v_split: 0.05

model:
  name: 'DenseMobileNet'
  D: 2
  alpha: 1
  depth: 1
  classes: 4
  loss_params:
    func: 'CrossEntropyLoss'
  arrange_data: 'arrange_dense_2stack'
  arrange_truth: 'arrange_dense'
  collate: 'collate_dense_2stack'
  
  activation_params:
    activation: 'ReLU'
    LeakyReLU:
      negative_slope: 0.01
      
  optimizer_params:
    optimizer: 'SGD'
    AdamW:
      lr:               2.e-3
      weight_decay:     0.01
    Fromage:
      lr:               0.01
    Ranger:
      lr:               1.e-3
      alpha:            0.5
      k:                6
      N_sma_threshhold: 5
      betas:            [ 0.95, 0.999 ]
      eps:              1.e-5
      weight_decay:     0
      use_gc:           True
      gc_conv_only:     False
    SGD:
      lr:               0.02
      momentum:         0.9

  scheduler_params:
    scheduler: 'ReduceLROnPlateau'
    ReduceLROnPlateau:
      factor: 0.5
      patience: 5
    StepLR:
      step_size: 5
      gamma: 0.8  

  metric_params:
    metrics: 'Classification'
    include_batch_metrics: True
    Classification:
      class_names: ['numu','nue','nc','cosmic']

data_loader:
  batch_size: 128
  num_workers: 3

trainer:
  benchmark: False
  device: 1 # Which GPU to use
  n_epochs: 30
  max_iters_train: None
  max_iters_eval:  None
  train_name:  'SGD'
  summary_dir: '/scratch/SparseNOvA/summary/preselection/Micahparam/dense_mobile_net/cvnmap/batchsize128/'
  output_dir:  '/scratch/SparseNOvA/params'

inference:
  max_images: 100 # Maximum number of images to process
  event_display: True # Whether to draw event displays
  confusion: False # Whether to draw a confusion matrix
  state_dict: None # Replace this with a string path to a trained .pth.tar file after training! They're written to params/checkpoints
