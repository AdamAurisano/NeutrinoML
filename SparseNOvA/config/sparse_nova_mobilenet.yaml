data:
  name: 'SparsePixelMapNOvA'
  filedir: '/data/mp5/preselection'
  t_v_split: 0.05

model:
  name: 'MobileNet'
  D: 2
  alpha: 1
  depth: 1
  classes: 3
  loss_func: 'CrossEntropyLoss'
  arrange_data: 'arrange_sparse_minkowski_2stack'
  step_size: 1 # How many epochs between LR reduction
  gamma: 0.8 # Factor to reduce learning rate by
  activation_params:
    activation: 'ReLU'
    LeakyReLU:
      negative_slope: 0.01
  optimizer_params:
    optimizer: 'AdamW'
    AdamW:
      lr: 1.e-4
      weight_decay:     0.01
    Ranger:
      lr:               1.e-3
      alpha:            0.5
      k:                6
      N_sma_threshhold: 5
      betas:            [ 0.95, 0.999 ]
      eps:              1.e-5
      weight_decay:     0
      use_gc:           True
      gc_conv_only:     False
    lr_policy:
      step_size: 1
      gamma:     0.1
    SGD:
      lr: 2.e-3
  n_classes: 4
  metrics: 'SemanticSegmentation'
  metric_params:
#     metrics: 'SemanticSegmentation' should restructure config like this
    SemanticSegmentation:
      class_names: ['numu','nue','nc']

data_loader:
  batch_size: 1000
  num_workers: 3

trainer:
  benchmark: False
  device: 0 # Which GPU to use
  n_epochs: 20
  max_iters_train: None
  max_iters_eval:  None
  train_name:  'train1'
  summary_dir: '/scratch/SparseNOvA/summary'
  output_dir:  '/scratch/SparseNOvA/params'

inference:
  max_images: 100 # Maximum number of images to process
  event_display: True # Whether to draw event displays
  confusion: False # Whether to draw a confusion matrix
  state_dict: None # Replace this with a string path to a trained .pth.tar file after training! They're written to params/checkpoints
